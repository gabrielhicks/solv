#!/bin/bash
# postinst script for solv

set -e

# Variables
USERNAME="${SOLV_USER:-solv}"
SOLANA_VERSION="1.17.1"

# Directories and Paths
MOUNT_ROOT="/mt"
RAMDRIVE_PATH="/mnt/ramdrive"
SOLV_ROOT="${MOUNT_ROOT}/solana"
WD="${SOLV_ROOT}/solana-validator"
LOG_DIR="${WD}/log"
LOG_PATH="${LOG_DIR}/solana-validator.log"
LEDGER_PATH="${MOUNT_ROOT}/ledger/validator-ledger"
ACCOUNT_DIR="${MOUNT_ROOT}/solana-accounts"
START_VALIDATOR_SCRIPT="${WD}/start-validator.sh"

SOL_SERVICE_PATH="/etc/systemd/system/sol.service"
SOL_LOGROTATE_PATH="/etc/logrotate.d/solana"
SOL_SYSTEM_CONFIG21_PATH="/etc/sysctl.d/21-solana-validator.conf"
SOL_NOFILES_CONF_PATH="/etc/security/limits.d/90-solana-nofiles.conf"
SOL_SYSTEM_CONF="/etc/systemd/system.conf"

if [ -z "$SOLV_ROOT" ]; then
    handle_error "SOLV_ROOT is not defined"
fi

# Solana Wallet Keyfile Paths
MAINNET_VALIDATOR_KEYFILE="${SOLV_ROOT}/mainnet-validator-keypair.json"
TESTNET_VALIDATOR_KEYFILE="${SOLV_ROOT}/testnet-validator-keypair.json"
VALIDATOR_VOTE_KEYFILE="${SOLV_ROOT}/vote-account-keypair.json"
VALITATOR_AUTHORITY_KEYFILE="${SOLV_ROOT}/authority-keypair.json"

# Nodenv configurations
NODENV_DIR="/home/$USERNAME/.nodenv"
NODENV_REPO="https://github.com/nodenv/nodenv.git"
NODE_VERSION="18.18.0"


handle_error() {
    echo "Error occurred: $1"
    exit 1
}

setup_firewall() {
    echo "Configuring firewall"
    yes | ufw enable
    ufw allow ssh
    ufw allow 53 
    ufw allow 8000:10000/udp
    ufw allow 8000:10000/tcp
    ufw reload
}

install_nodenv() {
    echo "Installing nodenv for $USERNAME user"
    sudo -u $USERNAME git clone $NODENV_REPO $NODENV_DIR
    ln -vs $NODENV_DIR/bin/nodenv /usr/local/bin/nodenv;
    sudo -u $USERNAME mkdir -p $NODENV_DIR/plugins;
    sudo -u $USERNAME git clone https://github.com/nodenv/node-build.git $NODENV_DIR/plugins/node-build
    sudo -u $USERNAME git clone https://github.com/nodenv/nodenv-aliases.git $NODENV_DIR/plugins/nodenv-aliases;
    chown $USERNAME:$USERNAME $NODENV_DIR/bin/nodenv;

    # Retry logic for nodenv install
    MAX_RETRIES=3
    RETRY_DELAY=10
    for i in $(seq 1 $MAX_RETRIES); do
        sudo -u $USERNAME nodenv install $NODE_VERSION && break
        if [ $i -lt $MAX_RETRIES ]; then
            echo "Failed to install Node version $NODE_VERSION. Retrying in $RETRY_DELAY seconds..."
            sleep $RETRY_DELAY
        else
            echo "Failed to install Node version $NODE_VERSION after $MAX_RETRIES attempts. Exiting."
            return 1
        fi
    done

    sudo -u $USERNAME nodenv global $NODE_VERSION;
    echo "eval \"\$(nodenv init - bash)\"" >> /home/$USERNAME/.profile || handle_error "Failed to add nodenv init to profile";
}


setup_sol_service() {
    echo "Creating sol.service systemd service file"
    cat <<EOL | sudo tee $SOL_SERVICE_PATH
[Unit]
Description=Solana Validator
After=network.target
StartLimitIntervalSec=0

[Service]
Type=simple
Restart=always
RestartSec=1
LimitNOFILE=1000000
LogRateLimitIntervalSec=0
User=$USERNAME
Environment=PATH=/home/$USERNAME/.local/share/solana/install/active_release/bin
WorkingDirectory=$WD
Environment="SOLANA_METRICS_CONFIG=host=https://metrics.solana.com:8086,db=tds,u=testnet_write,p=c4fa841aa918bf8274e3e2a44d77568d9861b3ea"
ExecStart=$START_VALIDATOR_SCRIPT

[Install]
WantedBy=multi-user.target
EOL
}

setup_logrotate() {
    echo "Creating logrotate configuration for solana"
    if [ -f "$SOL_LOGROTATE_PATH" ]; then
        echo "SOL_LOGROTATE_PATH is already exists.Skipping logrotate configuration."
    else
        cat <<EOL | sudo tee $SOL_LOGROTATE_PATH
$LOG_PATH {
  su $USERNAME $USERNAME
  daily
  rotate 3
  missingok
  postrotate
    systemctl kill -s USR1 sol.service
  endscript
}
EOL
    fi
}

create_startup_script(){
    echo "Creating start-validator.sh script"
    mkdir -p $WD
    cat <<EOL | sudo tee $START_VALIDATOR_SCRIPT
#!/bin/bash
exec solana-validator \\
--identity $TESTNET_VALIDATOR_KEYFILE \\
--vote-account $VALIDATOR_VOTE_KEYFILE \\
--log $LOG_PATH \\
--accounts $ACCOUNT_DIR \\
--ledger $LEDGER_PATH \\
--no-genesis-fetch \\
--entrypoint entrypoint.testnet.solana.com:8001 \\
--entrypoint entrypoint2.testnet.solana.com:8001 \\
--entrypoint entrypoint3.testnet.solana.com:8001 \\
--entrypoint entrypoint.testnet.solana.sergo.dev:8001 \\
--known-validator eoKpUABi59aT4rR9HGS3LcMecfut9x7zJyodWWP43YQ \\
--known-validator GAPNvBD6MXboQmxP9XTCC4CMsT5gUpdFZWbnj4Tz2s7i \\
--known-validator 5D1fNXzvv5NjV1ysLjirC4WY92RNsVH18vjmcszZd8on \\
--known-validator BFquPCAYdjN9QyLVfuGrQdJTF9Ct7Z85FDxhFeLcpFqR \\
--known-validator 9e2RvEzemWs6ZkEhdW2NddSWiFKgJfkw5LWGtgwvPnvw \\
--only-known-rpc \\
--expected-genesis-hash 4uhcVJyU9pJkvQyS88uRDiswHXSCkY3zQawwpjk2NsNY \\
--dynamic-port-range 8000-8020 \\
--rpc-port 8899 \\
--wal-recovery-mode skip_any_corrupted_record \\
--wait-for-supermajority 213932256 \\
--expected-shred-version 61807 \\
--expected-bank-hash 4cyHLxMPCJH4pq9v6eVDFBKKNwrVw8ww78yYUSJNDvjU \\
--known-validator 5D1fNXzvv5NjV1ysLjirC4WY92RNsVH18vjmcszZd8on \\
--limit-ledger-size \\
--no-incremental-snapshots
EOL
    sudo chmod +x $START_VALIDATOR_SCRIPT
    sudo chown $USERNAME:$USERNAME $START_VALIDATOR_SCRIPT
}

setup_directories() {
    echo "Creating directories"
    if [ ! -d "$LOG_DIR" ]; then
        sudo mkdir -p $LOG_DIR
    fi
    if [ ! -d "$RAMDRIVE_PATH" ]; then
        sudo mkdir $RAMDRIVE_PATH
    fi
    if [ ! -d "$LEDGER_PATH" ]; then
        sudo mkdir -p $LEDGER_PATH
    fi
    if [ ! -d "$ACCOUNT_DIR" ]; then
        sudo mkdir -p $ACCOUNT_DIR
    fi
    if [ ! -d "$SOLV_ROOT" ]; then
        sudo chown $USERNAME:$USERNAME -R $LOG_DIR $RAMDRIVE_PATH $LEDGER_PATH $ACCOUNT_DIR
    fi
    
}


setup_systemd(){
        if [ ! -f "$SOL_SYSTEM_CONFIG21_PATH" ]; then
    echo "Creating solana-validator.conf sysctl configuration file"
    sudo bash -c "cat >$SOL_SYSTEM_CONFIG21_PATH <<EOF
# Increase UDP buffer sizes
net.core.rmem_default = 134217728
net.core.rmem_max = 134217728
net.core.wmem_default = 134217728
net.core.wmem_max = 134217728

# Increase memory mapped files limit
vm.max_map_count = 1000000

# Increase number of allowed open file descriptors
fs.nr_open = 1000000
EOF"
    sudo sysctl -p $SOL_SYSTEM_CONFIG21_PATH
    echo "DefaultLimitNOFILE=1000000" | sudo tee -a $SOL_SYSTEM_CONF
    sudo bash -c "cat >$SOL_NOFILES_CONF_PATH <<EOF
# Increase process file descriptor count limit
* - nofile 1000000
EOF"
        fi
}

case "$1" in
    configure)
        setup_firewall
        setup_directories
        if [ ! -d "$NODENV_DIR" ]; then
            install_nodenv
        fi
        if [ ! -f "$SOL_SERVICE_PATH" ]; then
            setup_sol_service
        fi
        setup_logrotate
        if [ ! -f "$START_VALIDATOR_SCRIPT" ]; then
            create_startup_script
        fi
        setup_systemd
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

SOLV_HOME=$(eval echo ~solv)
export SOLANA_INSTALL_DIR="$SOLV_HOME/.local/share/solana/install"
sudo -u solv sh -c "$(curl -sSfL https://release.solana.com/v${SOLANA_VERSION}/install)"
echo "Success! You can now user Solv CLI ðŸŽ‰"
cd /home/$USERNAME || true
sudo -u $USERNAME bash -c 'source ~/.profile && solv solv' || echo "$ source ~/.profile"

exit 0
